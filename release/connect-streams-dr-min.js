(()=>{var l;(l={94:()=>{!function(){var l=this||globalThis,Z=l.connect||{};l.connect=Z,l.lily=Z;var b=navigator.userAgent,d=["bubbles","cancelBubble","cancelable","composed","data","defaultPrevented","eventPhase","isTrusted","lastEventId","origin","returnValue","timeStamp","type"];Z.sprintf=l.sprintf,Z.vsprintf=l.vsprintf,delete l.sprintf,delete l.vsprintf,Z.HTTP_STATUS_CODES={SUCCESS:200,UNAUTHORIZED:401,ACCESS_DENIED:403,TOO_MANY_REQUESTS:429,INTERNAL_SERVER_ERROR:500},Z.TRANSPORT_TYPES={CHAT_TOKEN:"chat_token",WEB_SOCKET:"web_socket",AGENT_DISCOVERY:"agent_discovery",WEB_RTC:"web_rtc"},Z.hitch=function(){var l=Array.prototype.slice.call(arguments),b=l.shift(),d=l.shift();return Z.assertNotNull(b,"scope"),Z.assertNotNull(d,"method"),Z.assertTrue(Z.isFunction(d),"method must be a function"),function(){var Z=Array.prototype.slice.call(arguments);return d.apply(b,l.concat(Z))}},Z.isFunction=function(l){return!!(l&&l.constructor&&l.call&&l.apply)},Z.isArray=function(l){return"[object Array]"===Object.prototype.toString.call(l)},Z.keys=function(l){var b=[];for(var d in Z.assertNotNull(l,"map"),l)b.push(d);return b},Z.values=function(l){var b=[];for(var d in Z.assertNotNull(l,"map"),l)b.push(l[d]);return b},Z.entries=function(l){var Z=[];for(var b in l)Z.push({key:b,value:l[b]});return Z},Z.merge=function(){var l=Array.prototype.slice.call(arguments,0),b={};return l.forEach(function(l){Z.entries(l).forEach(function(l){b[l.key]=l.value})}),b},Z.now=function(){return(new Date).getTime()},Z.find=function(l,Z){for(var b=0;b<l.length;b++)if(Z(l[b]))return l[b];return null},Z.contains=function(l,b){return l instanceof Array?null!=Z.find(l,function(l){return l===b}):b in l},Z.containsValue=function(l,b){return l instanceof Array?null!=Z.find(l,function(l){return l===b}):null!=Z.find(Z.values(l),function(l){return l===b})},Z.randomId=function(){return Z.sprintf("%s-%s",Z.now(),Math.random().toString(36).slice(2))},Z.makeEnum=function(l){var Z={};return l.forEach(function(l){var b=l.replace(/\.?([a-z]+)_?/g,function(l,Z){return Z.toUpperCase()+"_"}).replace(/_$/,"");Z[b]=l}),Z},Z.makeNamespacedEnum=function(l,b){var d=Z.makeEnum(b);return Z.keys(d).forEach(function(b){d[b]=Z.sprintf("%s::%s",l,d[b])}),d},Z.makeGenericNamespacedEnum=function(l,b,d){var m=Z.makeEnum(b);return Z.keys(m).forEach(function(b){m[b]=Z.sprintf("%s"+d+"%s",l,m[b])}),m},Z.isChromeBrowser=function(){return-1!==b.indexOf("Chrome")},Z.isFirefoxBrowser=function(){return-1!==b.indexOf("Firefox")},Z.isOperaBrowser=function(){return-1!==b.indexOf("Opera")},Z.isEdgeBrowser=function(){return-1!==b.indexOf("Edg")},Z.getChromeBrowserVersion=function(){var l=b.substring(b.indexOf("Chrome")+7);return l?parseFloat(l):-1},Z.getFirefoxBrowserVersion=function(){var l=b.substring(b.indexOf("Firefox")+8);return l?parseFloat(l):-1},Z.isValidLocale=function(l){return[{id:"en_US",label:"English"},{id:"de_DE",label:"Deutsch"},{id:"es_ES",label:"Español"},{id:"fr_FR",label:"Français"},{id:"ja_JP",label:"日本語"},{id:"it_IT",label:"Italiano"},{id:"ko_KR",label:"한국어"},{id:"pt_BR",label:"Português"},{id:"zh_CN",label:"中文(简体)"},{id:"zh_TW",label:"中文(繁體)"}].map(function(l){return l.id}).includes(l)},Z.getOperaBrowserVersion=function(){var l=b.indexOf("Opera"),Z=-1!==b.indexOf("Version")?b.substring(l+8):b.substring(l+6);return Z?parseFloat(Z):-1},Z.index=function(l,Z){var b={};return l.forEach(function(l){b[Z(l)]=l}),b},Z.set=function(l){var Z={};return l.forEach(function(l){Z[l]=1}),Z},Z.relativeComplement=function(l,b){var d={};return Z.keys(b).forEach(function(Z){Z in l||(d[Z]=b[Z])}),d},Z.assertTrue=function(l,b){if(!l)throw new Z.ValueError(b)},Z.assertNotNull=function(l,b){return Z.assertTrue(null!=l&&void 0!==typeof l,Z.sprintf("%s must be provided",b||"A value")),l},Z.deepcopy=function(l){return JSON.parse(JSON.stringify(l))},Z.deepcopyCrossOriginEvent=function(l){const b={};return d.forEach(d=>{try{b[d]=l[d]}catch(l){Z.getLog().info("deepcopyCrossOriginEvent failed on key: ",d).sendInternalLogToServer()}}),Z.deepcopy(b)},Z.getBaseUrl=function(){var b=l.location;return Z.sprintf("%s//%s:%s",b.protocol,b.hostname,b.port)},Z.getUrlWithProtocol=function(b){var d=l.location.protocol;return b.substr(0,d.length)!==d?Z.sprintf("%s//%s",d,b):b},Z.isFramed=function(){try{return window.self!==window.top}catch(l){return!0}},Z.hasOtherConnectedCCPs=function(){return Z.numberOfConnectedCCPs>1},Z.fetch=function(l,b,d,m){return m=m||5,d=d||1e3,b=b||{},new Promise(function(c,W){!function m(G){fetch(l,b).then(function(l){l.status===Z.HTTP_STATUS_CODES.SUCCESS?l.json().then(l=>c(l)).catch(()=>c({})):1!==G&&(l.status>=Z.HTTP_STATUS_CODES.INTERNAL_SERVER_ERROR||l.status===Z.HTTP_STATUS_CODES.TOO_MANY_REQUESTS)?setTimeout(function(){m(--G)},d):W(l)}).catch(function(l){W(l)})}(m)})},Z.fetchWithTimeout=async function(l,b,d,m,c){if(d=d||{},!b)return Z.fetch(l,d,m,c);const W=new AbortController,G=setTimeout(()=>W.abort(),b),V=await Z.fetch(l,{...d,signal:W.signal},m,c);return clearTimeout(G),V},Z.backoff=function(b,d,m,c){Z.assertTrue(Z.isFunction(b),"func must be a Function");var W=this;b({success:function(l){c&&c.success&&c.success(l)},failure:function(Z,G){if(m>0){var V=2*d*Math.random();l.setTimeout(function(){W.backoff(b,2*V,--m,c)},V)}else c&&c.failure&&c.failure(Z,G)}})},Z.publishMetric=function(l){Z.core.getUpstream().sendUpstream(Z.EventType.BROADCAST,{event:Z.EventType.CLIENT_METRIC,data:l})},Z.publishSoftphoneStats=function(l){Z.core.getUpstream().sendUpstream(Z.EventType.BROADCAST,{event:Z.EventType.SOFTPHONE_STATS,data:l})},Z.publishSoftphoneReport=function(l){Z.core.getUpstream().sendUpstream(Z.EventType.BROADCAST,{event:Z.EventType.SOFTPHONE_REPORT,data:l})},Z.publishClickStreamData=function(l){Z.core.getUpstream().sendUpstream(Z.EventType.BROADCAST,{event:Z.EventType.CLICK_STREAM_DATA,data:l})},Z.publishClientSideLogs=function(l){Z.core.getEventBus().trigger(Z.EventType.CLIENT_SIDE_LOGS,l)},Z.addNamespaceToLogs=function(l){["log","error","warn","info","debug"].forEach(Z=>{const b=window.console[Z];window.console[Z]=function(){const Z=Array.from(arguments);Z.unshift(`[${l}]`),b.apply(window.console,Z)}})},Z.PopupManager=function(){},Z.PopupManager.prototype.open=function(l,Z,b){var d=null;if(b){var m=b.height||578,c=b.width||433,W=b.top||0,G=b.left||0;(d=window.open("",Z,"width="+c+", height="+m+", top="+W+", left="+G)).location!==l&&(d=window.open(l,Z,"width="+c+", height="+m+", top="+W+", left="+G))}else(d=window.open("",Z)).location!==l&&(d=window.open(l,Z));return d},Z.PopupManager.prototype.clear=function(Z){var b=this._getLocalStorageKey(Z);l.localStorage.removeItem(b)},Z.PopupManager.prototype._getLastOpenedTimestamp=function(Z){var b=this._getLocalStorageKey(Z),d=l.localStorage.getItem(b);return d?parseInt(d,10):0},Z.PopupManager.prototype._setLastOpenedTimestamp=function(Z,b){var d=this._getLocalStorageKey(Z);l.localStorage.setItem(d,""+b)},Z.PopupManager.prototype._getLocalStorageKey=function(l){return"connectPopupManager::"+l};var m=Z.makeEnum(["granted","denied","default"]);Z.NotificationManager=function(){this.queue=[],this.permission=m.DEFAULT},Z.NotificationManager.prototype.requestPermission=function(){var b=this;"Notification"in l?l.Notification.permission===m.DENIED?(Z.getLog().warn("The user has requested to not receive notifications.").sendInternalLogToServer(),this.permission=m.DENIED):this.permission!==m.GRANTED&&l.Notification.requestPermission().then(function(l){b.permission=l,l===m.GRANTED?b._showQueued():b.queue=[]}):(Z.getLog().warn("This browser doesn't support notifications.").sendInternalLogToServer(),this.permission=m.DENIED)},Z.NotificationManager.prototype.show=function(l,b){if(this.permission===m.GRANTED)return this._showImpl({title:l,options:b});if(this.permission===m.DENIED)Z.getLog().warn("Unable to show notification.").sendInternalLogToServer().withObject({title:l,options:b});else{var d={title:l,options:b};Z.getLog().warn("Deferring notification until user decides to allow or deny.").withObject(d).sendInternalLogToServer(),this.queue.push(d)}},Z.NotificationManager.prototype._showQueued=function(){var l=this,Z=this.queue.map(function(Z){return l._showImpl(Z)});return this.queue=[],Z},Z.NotificationManager.prototype._showImpl=function(Z){var b=new l.Notification(Z.title,Z.options);return Z.options.clicked&&(b.onclick=function(){Z.options.clicked.call(b)}),b},Z.ValueError=function(){var l=Array.prototype.slice.call(arguments,0),b=l.shift(),d=new Error(Z.vsprintf(b,l));return Object.setPrototypeOf(d,Z.ValueError.prototype),d},Object.setPrototypeOf(Z.ValueError.prototype,Error.prototype),Object.setPrototypeOf(Z.ValueError,Error),Z.ValueError.prototype.name="ValueError",Z.NotImplementedError=function(){var l=Array.prototype.slice.call(arguments,0),b=l.shift(),d=new Error(Z.vsprintf(b,l));return Object.setPrototypeOf(d,Z.NotImplementedError.prototype),d},Object.setPrototypeOf(Z.NotImplementedError.prototype,Error.prototype),Object.setPrototypeOf(Z.NotImplementedError,Error),Z.NotImplementedError.prototype.name="NotImplementedError",Z.StateError=function(){var l=Array.prototype.slice.call(arguments,0),b=l.shift(),d=new Error(Z.vsprintf(b,l));return Object.setPrototypeOf(d,Z.StateError.prototype),d},Object.setPrototypeOf(Z.StateError.prototype,Error.prototype),Object.setPrototypeOf(Z.StateError,Error),Z.StateError.prototype.name="StateError",Z.VoiceIdError=function(l,Z,b){var d={};return d.type=l,d.message=Z,d.stack=Error(Z).stack,d.err=b,d},Z.isCCP=function(){return!!Z.core.upstream&&"ConnectSharedWorkerConduit"===Z.core.getUpstream().name},Z.isSharedWorker=function(){return Z.worker&&!!Z.worker.clientEngine},Z.isCRM=function(){return!!Z.core.upstream&&(Z.core.getUpstream()instanceof Z.IFrameConduit||Z.core.getUpstream()instanceof Z.GRProxyIframeConduit)},Z.isActiveConduit=function(l){const b=Z.core.getUpstream();return b instanceof Z.GRProxyIframeConduit?l.name===b.activeRegionUrl:(Z.getLog().debug("connect.isActiveConduit is called but there is no GR proxy conduit").sendInternalLogToServer(),!0)}}()},96:()=>{!function(){var l=this||globalThis,Z=l.connect||{},b=l.globalConnect||{};l.connect=Z,l.globalConnect=b,l.lily=Z,b.core={};var d="globalCCP",m="465px";b.extractCcpRegionParams=function(l,b){Z.assertNotNull(b.standByRegion,"ccpBackupResource"),Z.assertNotNull(b.standByRegion.ccpUrl,"ccpUrl"),Z.assertNotNull(b.standByRegion.region,"region"),b.pollForFailover&&(Z.assertNotNull(b.loginUrl,"loginUrl"),Z.assertNotNull(b.instanceArn,"primary ARN"),b.otherArn=Z.assertNotNull(b.standByRegion.instanceArn,"backup ARN"));var d=b,W=Object.assign({},b,{ccpUrl:b.standByRegion.ccpUrl,region:b.standByRegion.region,instanceArn:b.standByRegion.instanceArn,otherArn:b.instanceArn,loginPopup:!1}),G=c(l);return parseInt(G.height)<=0&&(l.style.height=m,G.height=m),[d,W].map(function(l){return Z.assertNotNull(l.ccpUrl,"ccpUrl"),Z.assertNotNull(l.region,"region"),delete l.standByRegion,l.disasterRecoveryOn=!0,l.iframe_style="margin: 0; border: 0; padding:0px;width: 0px;height: 0px",l.height=G.height,l})};var c=function(l){var Z=window.getComputedStyle(l);return{height:Z.getPropertyValue("height"),width:Z.getPropertyValue("width"),display:Z.getPropertyValue("display")}},W=function(l,d){if(Z.assertTrue("string"==typeof l,"Region provided "+l+" is not a valid string"),!(d||b.core.regions).hasOwnProperty(l)){var m="Region provided "+l+" is not found!";throw new Z.ValueError(m)}};b.core.initCCP=function(l,m){Z.assertNotNull(m.getPrimaryRegion,"getPrimaryRegion"),Z.assertTrue(Z.isFunction(m.getPrimaryRegion),"getPrimaryRegion must be a function");var c=m.getPrimaryRegion;delete m.getPrimaryRegion,delete m.provider;var u=b.extractCcpRegionParams(l,m);c(function(c){return new Promise(R=>{var p;p=m.pollForFailover?c||m.region:Z.assertNotNull(c),b.core.regions=u.reduce(function(l,Z){return l[Z.region]={ccpParams:Z},l},{});var i=u.reduce(function(l,Z){return l[Z.instanceArn]=Z.region,l},{});W(p,b.core.regions),b.core.primaryRegion=p,b.core.secondaryRegion=Object.keys(b.core.regions).find(function(l){return l!=b.core.primaryRegion});var Y=u.map(function(l){return l.region===b.core.primaryRegion&&(l.isPrimary=!0),new b.Container(l)}),y=Y.map(function(l){return l.ccp.outerHTML}),h=document.createElement("iframe");h.style="margin: 0; border: 0; padding:0px;width: 100%;height: 100%",h.allow="microphone; camera; autoplay; clipboard-write; identity-credentials-get",h.id=d,h.scrolling="no",h.onload=function(){X(b.core.primaryRegion),V(b.core.secondaryRegion),Y.map(function(l){var Z=h.contentDocument.getElementById(l.id),d=Z.contentDocument,c=Z.contentWindow;m.additionalScripts&&Array.isArray(m.additionalScripts)&&m.additionalScripts.forEach(l=>{var Z=d.createElement("script");Z.src=l,d.body.appendChild(Z)}),c.init();var W=c.connect;b.core.regions[l.id].connect=W,W.core.getUpstream().onUpstream(W.DisasterRecoveryEvents.FAILOVER,function(Z){if(Z.nextActiveArn&&b.core.secondaryRegion===i[Z.nextActiveArn])G(i[Z.nextActiveArn],b.core.primaryRegion);else{if(!1!==Z.isPrimary||l.id!==b.core.primaryRegion)return;G(b.core.secondaryRegion,l.id)}delete b._failoverPending,b._triggerFailoverCompleteHandlers({activeRegion:b.core.primaryRegion,activeCcpUrl:b.core.regions[b.core.primaryRegion].ccpParams.ccpUrl})}),W.core.getUpstream().onUpstream(W.DisasterRecoveryEvents.FAILOVER_PENDING,function({nextActiveArn:l}){b._failoverPending||(b._triggerFailoverPendingHandlers({nextActiveArn:l}),b._failoverPending=!0)}),l.id===b.core.primaryRegion&&(window.connect=W),b._triggerInitHandlers(W,l.id)}),R(b.core.regions[b.core.primaryRegion].connect)},h.srcdoc=["<!DOCTYPE html>","<meta charset='UTF-8'>","<html>","<head>","<style>","html, body { width: 100%;height: 100%;margin: 0px;padding: 0px; border: 0px;}","</style>","</head>","<body>",y.join(""),"</body>","</html>"].join(""),l.appendChild(h)})},function(l){console.error("[Disaster Recovery] An error occured, while attempting to retrieve your primary region;"),l()})};var G=function(l,Z){b.core.primaryRegion=l,b.core.secondaryRegion=Z,window.connect=b.core.regions[l].connect,b.core.activate(l),X(l),V(Z)},V=function(l){document.getElementById(d).contentDocument.getElementById(l).style="height: 0; width: 0; border: 0px"},X=function(l){document.getElementById(d).contentDocument.getElementById(l).style="height:100%;width:100%;border:0px"};b.core.onInit=function(l){b.core._onInitHandlers=b.core._onInitHandlers||{};const d=Z.randomId();return b.core._onInitHandlers[d]=l,()=>delete b.core._onInitHandlers[d]},b._triggerInitHandlers=function(l,Z){const d=b.core._onInitHandlers;d&&Object.values(d).forEach(b=>b(l,Z))},b.core.onFailoverComplete=function(l){b.core._failoverCompleteHandlers=b.core._failoverCompleteHandlers||{};const d=Z.randomId();return b.core._failoverCompleteHandlers[d]=l,()=>delete b.core._failoverCompleteHandlers[d]},b._triggerFailoverCompleteHandlers=function(l){const Z=b.core._failoverCompleteHandlers;Z&&Object.values(Z).forEach(Z=>Z(l))},b.core.onFailoverPending=function(l){b.core._failoverPendingHandlers=b.core._failoverPendingHandlers||{};const d=Z.randomId();return b.core._failoverPendingHandlers[d]=l,()=>delete b.core._failoverPendingHandlers[d]},b._triggerFailoverPendingHandlers=function(l){const Z=b.core._failoverPendingHandlers;Z&&Object.values(Z).forEach(Z=>Z(l))},b.core.downloadLogs=function(l){if(!(b.core.regions&&b.core.regions[b.core.primaryRegion]&&b.core.regions[b.core.primaryRegion].connect))throw new Error("CCP is not initialized yet. Please call initCCP() first and wait until the getPrimaryRegion promise resolves.");Object.entries(b.core.regions).forEach(([Z,{connect:b}])=>{const d=`${Z}-${l&&l.logName||"agent-log"}`;b.getLog().download({logName:d,filterByLogLevel:l&&l.filterByLogLevel})})},b.core.failover=function(l){b.core.failoverTo(b.core.secondaryRegion,l)},b.core.failoverTo=function(l,d){W(l),l===b.core.primaryRegion?Z.getLog().info(`[Disaster Recovery] Ignoring request to fail over to region ${l} since it is already the currently active region.`).sendInternalLogToServer():b.core.deactivate(b.core.primaryRegion,d)},b.core.deactivate=function(l,Z){var d=b.core.regions[l].connect;d.getLog().info("[Disaster Recovery] Deactivating %s region.",l).sendInternalLogToServer(),d.core.suppressContacts&&d.core.forceOffline?(d.core.suppressContacts(!0),d.core.forceOffline({softFailover:Z})):d.getLog().error("[Disaster Recovery] CCP did not load successfully for region %s; unable to deactivate region",l)},b.core.activate=function(l){var Z=b.core.regions[l].connect;Z.getLog().info("[Disaster Recovery] Activating %s region.",l).sendInternalLogToServer(),Z.core.suppressContacts?Z.core.suppressContacts(!1):Z.getLog().error("[Disaster Recovery] CCP did not load successfully for region %s; unable to activate region",l)}}()},236:function(){!function(){function l(l,Z){var b=(65535&l)+(65535&Z);return(l>>16)+(Z>>16)+(b>>16)<<16|65535&b}function Z(Z,b,d,m,c,W){return l((G=l(l(b,Z),l(m,W)))<<(V=c)|G>>>32-V,d);var G,V}function b(l,b,d,m,c,W,G){return Z(b&d|~b&m,l,b,c,W,G)}function d(l,b,d,m,c,W,G){return Z(b&m|d&~m,l,b,c,W,G)}function m(l,b,d,m,c,W,G){return Z(b^d^m,l,b,c,W,G)}function c(l,b,d,m,c,W,G){return Z(d^(b|~m),l,b,c,W,G)}function W(Z,W){var G,V,X,u,R;Z[W>>5]|=128<<W%32,Z[14+(W+64>>>9<<4)]=W;var p=1732584193,i=-271733879,Y=-1732584194,y=271733878;for(G=0;G<Z.length;G+=16)V=p,X=i,u=Y,R=y,p=b(p,i,Y,y,Z[G],7,-680876936),y=b(y,p,i,Y,Z[G+1],12,-389564586),Y=b(Y,y,p,i,Z[G+2],17,606105819),i=b(i,Y,y,p,Z[G+3],22,-1044525330),p=b(p,i,Y,y,Z[G+4],7,-176418897),y=b(y,p,i,Y,Z[G+5],12,1200080426),Y=b(Y,y,p,i,Z[G+6],17,-1473231341),i=b(i,Y,y,p,Z[G+7],22,-45705983),p=b(p,i,Y,y,Z[G+8],7,1770035416),y=b(y,p,i,Y,Z[G+9],12,-1958414417),Y=b(Y,y,p,i,Z[G+10],17,-42063),i=b(i,Y,y,p,Z[G+11],22,-1990404162),p=b(p,i,Y,y,Z[G+12],7,1804603682),y=b(y,p,i,Y,Z[G+13],12,-40341101),Y=b(Y,y,p,i,Z[G+14],17,-1502002290),p=d(p,i=b(i,Y,y,p,Z[G+15],22,1236535329),Y,y,Z[G+1],5,-165796510),y=d(y,p,i,Y,Z[G+6],9,-1069501632),Y=d(Y,y,p,i,Z[G+11],14,643717713),i=d(i,Y,y,p,Z[G],20,-373897302),p=d(p,i,Y,y,Z[G+5],5,-701558691),y=d(y,p,i,Y,Z[G+10],9,38016083),Y=d(Y,y,p,i,Z[G+15],14,-660478335),i=d(i,Y,y,p,Z[G+4],20,-405537848),p=d(p,i,Y,y,Z[G+9],5,568446438),y=d(y,p,i,Y,Z[G+14],9,-1019803690),Y=d(Y,y,p,i,Z[G+3],14,-187363961),i=d(i,Y,y,p,Z[G+8],20,1163531501),p=d(p,i,Y,y,Z[G+13],5,-1444681467),y=d(y,p,i,Y,Z[G+2],9,-51403784),Y=d(Y,y,p,i,Z[G+7],14,1735328473),p=m(p,i=d(i,Y,y,p,Z[G+12],20,-1926607734),Y,y,Z[G+5],4,-378558),y=m(y,p,i,Y,Z[G+8],11,-2022574463),Y=m(Y,y,p,i,Z[G+11],16,1839030562),i=m(i,Y,y,p,Z[G+14],23,-35309556),p=m(p,i,Y,y,Z[G+1],4,-1530992060),y=m(y,p,i,Y,Z[G+4],11,1272893353),Y=m(Y,y,p,i,Z[G+7],16,-155497632),i=m(i,Y,y,p,Z[G+10],23,-1094730640),p=m(p,i,Y,y,Z[G+13],4,681279174),y=m(y,p,i,Y,Z[G],11,-358537222),Y=m(Y,y,p,i,Z[G+3],16,-722521979),i=m(i,Y,y,p,Z[G+6],23,76029189),p=m(p,i,Y,y,Z[G+9],4,-640364487),y=m(y,p,i,Y,Z[G+12],11,-421815835),Y=m(Y,y,p,i,Z[G+15],16,530742520),p=c(p,i=m(i,Y,y,p,Z[G+2],23,-995338651),Y,y,Z[G],6,-198630844),y=c(y,p,i,Y,Z[G+7],10,1126891415),Y=c(Y,y,p,i,Z[G+14],15,-1416354905),i=c(i,Y,y,p,Z[G+5],21,-57434055),p=c(p,i,Y,y,Z[G+12],6,1700485571),y=c(y,p,i,Y,Z[G+3],10,-1894986606),Y=c(Y,y,p,i,Z[G+10],15,-1051523),i=c(i,Y,y,p,Z[G+1],21,-2054922799),p=c(p,i,Y,y,Z[G+8],6,1873313359),y=c(y,p,i,Y,Z[G+15],10,-30611744),Y=c(Y,y,p,i,Z[G+6],15,-1560198380),i=c(i,Y,y,p,Z[G+13],21,1309151649),p=c(p,i,Y,y,Z[G+4],6,-145523070),y=c(y,p,i,Y,Z[G+11],10,-1120210379),Y=c(Y,y,p,i,Z[G+2],15,718787259),i=c(i,Y,y,p,Z[G+9],21,-343485551),p=l(p,V),i=l(i,X),Y=l(Y,u),y=l(y,R);return[p,i,Y,y]}function G(l){var Z,b="",d=32*l.length;for(Z=0;Z<d;Z+=8)b+=String.fromCharCode(l[Z>>5]>>>Z%32&255);return b}function V(l){var Z,b=[];for(b[(l.length>>2)-1]=void 0,Z=0;Z<b.length;Z+=1)b[Z]=0;var d=8*l.length;for(Z=0;Z<d;Z+=8)b[Z>>5]|=(255&l.charCodeAt(Z/8))<<Z%32;return b}function X(l){var Z,b,d="0123456789abcdef",m="";for(b=0;b<l.length;b+=1)Z=l.charCodeAt(b),m+=d.charAt(Z>>>4&15)+d.charAt(15&Z);return m}function u(l){return unescape(encodeURIComponent(l))}function R(l){return function(l){return G(W(V(l),8*l.length))}(u(l))}function p(l,Z){return function(l,Z){var b,d,m=V(l),c=[],X=[];for(c[15]=X[15]=void 0,m.length>16&&(m=W(m,8*l.length)),b=0;b<16;b+=1)c[b]=909522486^m[b],X[b]=1549556828^m[b];return d=W(c.concat(V(Z)),512+8*Z.length),G(W(X.concat(d),640))}(u(l),u(Z))}(this||globalThis).md5=function(l,Z,b){return Z?b?p(Z,l):X(p(Z,l)):b?R(l):X(R(l))}}()},296:()=>{!function(){var l=this||globalThis,Z=l.connect||{};l.connect=Z,l.globalConnect={},l.lily=Z,globalConnect.Container=null;var b=window.atob(""),d=function(l){this.id=l.region,l.region=this._normalizeRegionString(l.region),this.height=l.height,this.style=l.iframe_style,this.ccp=this._createFramedCcp(l)};d.prototype._createFramedCcp=function(l){var Z=Z||"microphone; autoplay; clipboard-write",b=this.style||"margin: 0; border: 0; padding: 0px; width: 0px; height: 0px",d=document.createElement("iframe");return d.srcdoc=this.getContent(l),d.allow=Z,d.id=this.id,d.style=b,d.scrolling="no",d},d.prototype.getContent=function(l){return["<!DOCTYPE html>","<meta charset='UTF-8'>","<html>","<head>","<script type='text/javascript'>",b,"<\/script>","<style>","html, body, iframe { width: 100%;height: 100%;margin: 0px;padding: 0px; border: 0px;}","</style>","</head>","<body>","<div id=containerDiv style='width: 100%;height: 100%;'></div>","<script type='text/javascript'>","function init() {","connect.core.initCCP(containerDiv,"+JSON.stringify(l)+");","}","<\/script>","</body>","</html>"].join("")},d.prototype._normalizeRegionString=function(l){const Z=l.indexOf(".");return-1===Z?l:l.substring(0,Z)},globalConnect.Container=d}()},790:()=>{!function(){var l=this||globalThis,Z=function(){return Z.cache.hasOwnProperty(arguments[0])||(Z.cache[arguments[0]]=Z.parse(arguments[0])),Z.format.call(null,Z.cache[arguments[0]],arguments)};function b(l){return Object.prototype.toString.call(l).slice(8,-1).toLowerCase()}function d(l,Z){for(var b=[];Z>0;b[--Z]=l);return b.join("")}Z.format=function(l,m){var c,W,G,V,X,u,R,p=1,i=l.length,Y="",y=[];for(W=0;W<i;W++)if("string"===(Y=b(l[W])))y.push(l[W]);else if("array"===Y){if((V=l[W])[2])for(c=m[p],G=0;G<V[2].length;G++){if(!c.hasOwnProperty(V[2][G]))throw Z('[sprintf] property "%s" does not exist',V[2][G]);c=c[V[2][G]]}else c=V[1]?m[V[1]]:m[p++];if(/[^s]/.test(V[8])&&"number"!=b(c))throw Z("[sprintf] expecting number but found %s",b(c));switch(V[8]){case"b":c=c.toString(2);break;case"c":c=String.fromCharCode(c);break;case"d":c=parseInt(c,10);break;case"e":c=V[7]?c.toExponential(V[7]):c.toExponential();break;case"f":c=V[7]?parseFloat(c).toFixed(V[7]):parseFloat(c);break;case"o":c=c.toString(8);break;case"s":c=(c=String(c))&&V[7]?c.substring(0,V[7]):c;break;case"u":c>>>=0;break;case"x":c=c.toString(16);break;case"X":c=c.toString(16).toUpperCase()}c=/[def]/.test(V[8])&&V[3]&&c>=0?"+"+c:c,u=V[4]?"0"==V[4]?"0":V[4].charAt(1):" ",R=V[6]-String(c).length,X=V[6]?d(u,R):"",y.push(V[5]?c+X:X+c)}return y.join("")},Z.cache={},Z.parse=function(l){for(var Z=l,b=[],d=[],m=0;Z;){if(null!==(b=/^[^\x25]+/.exec(Z)))d.push(b[0]);else if(null!==(b=/^\x25{2}/.exec(Z)))d.push("%");else{if(null===(b=/^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-fosuxX])/.exec(Z)))throw"[sprintf] huh?";if(b[2]){m|=1;var c=[],W=b[2],G=[];if(null===(G=/^([a-z_][a-z_\d]*)/i.exec(W)))throw"[sprintf] huh?";for(c.push(G[1]);""!==(W=W.substring(G[0].length));)if(null!==(G=/^\.([a-z_][a-z_\d]*)/i.exec(W)))c.push(G[1]);else{if(null===(G=/^\[(\d+)\]/.exec(W)))throw"[sprintf] huh?";c.push(G[1])}b[2]=c}else m|=2;if(3===m)throw"[sprintf] mixing positional and named placeholders is not (yet) supported";d.push(b)}Z=Z.substring(b[0].length)}return d},l.sprintf=Z,l.vsprintf=function(l,b,d){return(d=b.slice(0)).splice(0,0,l),Z.apply(null,d)}}()}})[790](),l[236](),l[94](),l[296](),l[96]()})();